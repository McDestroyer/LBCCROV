// constants won't change. They're used here to set pin numbers:
const int buttonPin1 = 2;  // the number of the pushbutton pin
const int buttonPin2 = 4;
int relay1 = 6; // Plug the relay into Digital Pin 13
int relay2 = 10; // Plug the relay into Digital Pin 13
int fillDelay = 300;  //set how long the fill relay is on
int fillPause = 1000 ; // sets how long of a delay in between fill pulses 
float currentD;
int inCurrentD;
int goalD=10; // cm

// variables will change:
int buttonState1 = 0;  // variable for reading the pushbutton status
int buttonState2 = 0;

#include <Wire.h>
#include "MS5837.h"

MS5837 sensor;



void setup() {
  // initialize the LED pin as an output:
  pinMode(relay1, OUTPUT);
  pinMode(relay2, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin1, INPUT);
  pinMode(buttonPin1, INPUT);



  Serial.begin(9600);

  Serial.println("Starting");

  Wire.begin();

  // Initialize pressure sensor
  // Returns true if initialization was successful
  // We can't continue with the rest of the program unless we can initialize the sensor
  while (!sensor.init()) {
    Serial.println("Init failed!");
    Serial.println("Are SDA/SCL connected correctly?");
    Serial.println("Blue Robotics Bar30: White=SDA, Green=SCL");
    Serial.println("\n\n\n");
    delay(5000);
  }

  // .init sets the sensor model for us but we can override it if required.
  // Uncomment the next line to force the sensor model to the MS5837_30BA.
  sensor.setModel(MS5837::MS5837_02BA);

  sensor.setFluidDensity(996); // kg/m^3 (996 freshwater, 1029 for seawater)
  
}

void loop() {
  // read the state of the pushbutton value:
  buttonState1 = digitalRead(buttonPin1);
  buttonState2 = digitalRead(buttonPin2);
  sensor.read();
  currentD = sensor.depth();
  inCurrentD = round(currentD*100); // rounds sensor data into units of cm

  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState1 == HIGH) {
    goalD += 5; // Turn the relay on, units of cm
  } 
  if (buttonState2 == HIGH) {
    goalD -= 5; // Turn the relay on, units of cm
  } 
  if (inCurrentD<goalD) {
    digitalWrite(relay2, HIGH); // Turn the relay on
    delay(fillDelay);
    digitalWrite(relay1, LOW); // Turn the relay Off
    delay(fillPause);
  } else if (inCurrentD>goalD) {
    // turn LED off:
    digitalWrite(relay1, HIGH); // Turn the relay On
    digitalWrite(relay2, LOW); // Turn the relay Off
  } else {
    digitalWrite(relay1, LOW); // Turn the relay Off
    digitalWrite(relay2, LOW); // Turn the relay Off
  }
  
  delay(30);
  
  Serial.println("Depth: ");
  Serial.print(inCurrentD); //units of cm
  Serial.print("    Goal: ");
  Serial.print(goalD); //units of cm

}
